package demo.networkProgramming;

import demo.DemoInterface;

public interface NetwokrProgrammingDemo extends DemoInterface {

	/*
	 * 网络编程
	 * 传输层：UDP传输,TCP传输		应用层：HTTP传输(没写)URLConnection类
	 * 网络模型：
	 * OSI模型：			物理层,数据链路层,		网络层,		传输层,		会话层,表示层,应用层
	 * TCP/IP模型：		网络接入层(主机-网络层)	网际互联层		传输层		应用层	
	 * 
	 * 物理层：数字信号(1,0)->强弱电流->数字型号。这层的数据叫比特		
	 * 数据链路层：把物理层接收的数据进行MAC地址的封装和解封装。这一层工作的设备是交换机(将设备互联)。这层数据叫帧
	 * 网络层：将下层收到的数据进行IP地址的封装与解封装。这一层工作的设备是路由器(给数据包传输定义方向,选数据传输路径)。这层数据叫数据包
	 * 传输层:定义传输协议和端口号.有TCP(快,可靠),UDP协议(更快,不可靠)。这层的数据叫段
	 * 会话层：通过传输层的端口号,建立会话请求(设备之间需要互相认识可以是IP,MAC或者主机名).通过会话完成数据的通讯
	 * 表示层：解析(加密,解密,压缩,解压缩)会话的数据(是图片,声音还是文本?)。也就是把计算机能识别的东西转换成人能识别的东西(图片,声音)
	 * 应用层:解析数据的终端应用(网站的数据可以用浏览器来解析,QQ的信息可以用QQ来解析)
	 * 
	 * 后期发现7层很麻烦而且大部分软件都有会话层,表示层,应用层的这3层的功能,所以后面用TCP/IP协议
	 * 
	 * 网络通讯要素：
	 * 1.IP地址
	 * 	本地回环地址：127.0.0.1	主机名：localhost	完整的计算机名称：LiaoQichao(计算机,属性有看,可以更改)
	 * 2.端口号
	 * 		(逻辑)端口：用于标识进程的逻辑地址
	 * 		0~65535,其中0~1024系统使用或者保留端口.用来标识目的IP地址的哪个应用程序来解析
	 * 		192.168.1.100:4000  发给192.168.1.100,目的IP里面用端口为4000的程序来解析
	 * 3.传输协议
	 * 		传输的规则。常见的TCP/UDP(传输层)
	 * 		packet(数据包) 网络层。 数据报传输层
	 * 		udp：不需要建立连接(生活例子：寄快递,快递员不需要确认收件地址是否存在),每个数据报大小在64K内。因为无连接，所以速度快、不可靠。	
	 * 		以数据报包的形式传输。应用：视频
	 * 		tcp：建立连接(三次握手,对讲机 AsynB Back,synA(目前A知道A->B通，B->A通,B知道A->B通但不知道B->A通不通)，AackB(B收到A,说明B->A通)
	 * 		这样A和B都互相知道互通。以流的形式传输。生活例子：打电话。 应用：下载数据
	 */
}
